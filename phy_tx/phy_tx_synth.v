/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* src = "Byte_Striping_synth.v:1" *)
module Byte_Striping_synth(clk_2f, valid_in, data_in, selector, lane0, lane1, valid_0, valid_1);
  (* src = "Byte_Striping_synth.v:13" *)
  wire [31:0] _000_;
  (* src = "Byte_Striping_synth.v:13" *)
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  (* src = "Byte_Striping_synth.v:3" *)
  input clk_2f;
  (* src = "Byte_Striping_synth.v:5" *)
  input [31:0] data_in;
  (* src = "Byte_Striping_synth.v:7" *)
  output [31:0] lane0;
  (* src = "Byte_Striping_synth.v:8" *)
  output [31:0] lane1;
  (* src = "Byte_Striping_synth.v:6" *)
  input selector;
  (* src = "Byte_Striping_synth.v:9" *)
  output valid_0;
  (* src = "Byte_Striping_synth.v:10" *)
  output valid_1;
  (* src = "Byte_Striping_synth.v:4" *)
  input valid_in;
  NOT _136_ (
    .A(selector),
    .Y(_002_)
  );
  NOT _137_ (
    .A(valid_in),
    .Y(_003_)
  );
  NOR _138_ (
    .A(_002_),
    .B(_003_),
    .Y(_004_)
  );
  NAND _139_ (
    .A(selector),
    .B(valid_in),
    .Y(_005_)
  );
  NAND _140_ (
    .A(data_in[1]),
    .B(_004_),
    .Y(_006_)
  );
  NAND _141_ (
    .A(lane1[1]),
    .B(_005_),
    .Y(_007_)
  );
  NAND _142_ (
    .A(_006_),
    .B(_007_),
    .Y(_001_[1])
  );
  NAND _143_ (
    .A(data_in[2]),
    .B(_004_),
    .Y(_008_)
  );
  NAND _144_ (
    .A(lane1[2]),
    .B(_005_),
    .Y(_009_)
  );
  NAND _145_ (
    .A(_008_),
    .B(_009_),
    .Y(_001_[2])
  );
  NAND _146_ (
    .A(data_in[3]),
    .B(_004_),
    .Y(_010_)
  );
  NAND _147_ (
    .A(lane1[3]),
    .B(_005_),
    .Y(_011_)
  );
  NAND _148_ (
    .A(_010_),
    .B(_011_),
    .Y(_001_[3])
  );
  NAND _149_ (
    .A(data_in[4]),
    .B(_004_),
    .Y(_012_)
  );
  NAND _150_ (
    .A(lane1[4]),
    .B(_005_),
    .Y(_013_)
  );
  NAND _151_ (
    .A(_012_),
    .B(_013_),
    .Y(_001_[4])
  );
  NAND _152_ (
    .A(data_in[5]),
    .B(_004_),
    .Y(_014_)
  );
  NAND _153_ (
    .A(lane1[5]),
    .B(_005_),
    .Y(_015_)
  );
  NAND _154_ (
    .A(_014_),
    .B(_015_),
    .Y(_001_[5])
  );
  NAND _155_ (
    .A(data_in[6]),
    .B(_004_),
    .Y(_016_)
  );
  NAND _156_ (
    .A(lane1[6]),
    .B(_005_),
    .Y(_017_)
  );
  NAND _157_ (
    .A(_016_),
    .B(_017_),
    .Y(_001_[6])
  );
  NAND _158_ (
    .A(data_in[7]),
    .B(_004_),
    .Y(_018_)
  );
  NAND _159_ (
    .A(lane1[7]),
    .B(_005_),
    .Y(_019_)
  );
  NAND _160_ (
    .A(_018_),
    .B(_019_),
    .Y(_001_[7])
  );
  NAND _161_ (
    .A(data_in[8]),
    .B(_004_),
    .Y(_020_)
  );
  NAND _162_ (
    .A(lane1[8]),
    .B(_005_),
    .Y(_021_)
  );
  NAND _163_ (
    .A(_020_),
    .B(_021_),
    .Y(_001_[8])
  );
  NAND _164_ (
    .A(data_in[9]),
    .B(_004_),
    .Y(_022_)
  );
  NAND _165_ (
    .A(lane1[9]),
    .B(_005_),
    .Y(_023_)
  );
  NAND _166_ (
    .A(_022_),
    .B(_023_),
    .Y(_001_[9])
  );
  NAND _167_ (
    .A(data_in[10]),
    .B(_004_),
    .Y(_024_)
  );
  NAND _168_ (
    .A(lane1[10]),
    .B(_005_),
    .Y(_025_)
  );
  NAND _169_ (
    .A(_024_),
    .B(_025_),
    .Y(_001_[10])
  );
  NAND _170_ (
    .A(data_in[11]),
    .B(_004_),
    .Y(_026_)
  );
  NAND _171_ (
    .A(lane1[11]),
    .B(_005_),
    .Y(_027_)
  );
  NAND _172_ (
    .A(_026_),
    .B(_027_),
    .Y(_001_[11])
  );
  NAND _173_ (
    .A(data_in[12]),
    .B(_004_),
    .Y(_028_)
  );
  NAND _174_ (
    .A(lane1[12]),
    .B(_005_),
    .Y(_029_)
  );
  NAND _175_ (
    .A(_028_),
    .B(_029_),
    .Y(_001_[12])
  );
  NAND _176_ (
    .A(data_in[13]),
    .B(_004_),
    .Y(_030_)
  );
  NAND _177_ (
    .A(lane1[13]),
    .B(_005_),
    .Y(_031_)
  );
  NAND _178_ (
    .A(_030_),
    .B(_031_),
    .Y(_001_[13])
  );
  NAND _179_ (
    .A(data_in[14]),
    .B(_004_),
    .Y(_032_)
  );
  NAND _180_ (
    .A(lane1[14]),
    .B(_005_),
    .Y(_033_)
  );
  NAND _181_ (
    .A(_032_),
    .B(_033_),
    .Y(_001_[14])
  );
  NAND _182_ (
    .A(data_in[15]),
    .B(_004_),
    .Y(_034_)
  );
  NAND _183_ (
    .A(lane1[15]),
    .B(_005_),
    .Y(_035_)
  );
  NAND _184_ (
    .A(_034_),
    .B(_035_),
    .Y(_001_[15])
  );
  NAND _185_ (
    .A(data_in[16]),
    .B(_004_),
    .Y(_036_)
  );
  NAND _186_ (
    .A(lane1[16]),
    .B(_005_),
    .Y(_037_)
  );
  NAND _187_ (
    .A(_036_),
    .B(_037_),
    .Y(_001_[16])
  );
  NAND _188_ (
    .A(data_in[17]),
    .B(_004_),
    .Y(_038_)
  );
  NAND _189_ (
    .A(lane1[17]),
    .B(_005_),
    .Y(_039_)
  );
  NAND _190_ (
    .A(_038_),
    .B(_039_),
    .Y(_001_[17])
  );
  NAND _191_ (
    .A(data_in[18]),
    .B(_004_),
    .Y(_040_)
  );
  NAND _192_ (
    .A(lane1[18]),
    .B(_005_),
    .Y(_041_)
  );
  NAND _193_ (
    .A(_040_),
    .B(_041_),
    .Y(_001_[18])
  );
  NAND _194_ (
    .A(data_in[19]),
    .B(_004_),
    .Y(_042_)
  );
  NAND _195_ (
    .A(lane1[19]),
    .B(_005_),
    .Y(_043_)
  );
  NAND _196_ (
    .A(_042_),
    .B(_043_),
    .Y(_001_[19])
  );
  NAND _197_ (
    .A(data_in[20]),
    .B(_004_),
    .Y(_044_)
  );
  NAND _198_ (
    .A(lane1[20]),
    .B(_005_),
    .Y(_045_)
  );
  NAND _199_ (
    .A(_044_),
    .B(_045_),
    .Y(_001_[20])
  );
  NAND _200_ (
    .A(data_in[21]),
    .B(_004_),
    .Y(_046_)
  );
  NAND _201_ (
    .A(lane1[21]),
    .B(_005_),
    .Y(_047_)
  );
  NAND _202_ (
    .A(_046_),
    .B(_047_),
    .Y(_001_[21])
  );
  NAND _203_ (
    .A(data_in[22]),
    .B(_004_),
    .Y(_048_)
  );
  NAND _204_ (
    .A(lane1[22]),
    .B(_005_),
    .Y(_049_)
  );
  NAND _205_ (
    .A(_048_),
    .B(_049_),
    .Y(_001_[22])
  );
  NAND _206_ (
    .A(data_in[23]),
    .B(_004_),
    .Y(_050_)
  );
  NAND _207_ (
    .A(lane1[23]),
    .B(_005_),
    .Y(_051_)
  );
  NAND _208_ (
    .A(_050_),
    .B(_051_),
    .Y(_001_[23])
  );
  NAND _209_ (
    .A(data_in[24]),
    .B(_004_),
    .Y(_052_)
  );
  NAND _210_ (
    .A(lane1[24]),
    .B(_005_),
    .Y(_053_)
  );
  NAND _211_ (
    .A(_052_),
    .B(_053_),
    .Y(_001_[24])
  );
  NAND _212_ (
    .A(data_in[25]),
    .B(_004_),
    .Y(_054_)
  );
  NAND _213_ (
    .A(lane1[25]),
    .B(_005_),
    .Y(_055_)
  );
  NAND _214_ (
    .A(_054_),
    .B(_055_),
    .Y(_001_[25])
  );
  NAND _215_ (
    .A(data_in[26]),
    .B(_004_),
    .Y(_056_)
  );
  NAND _216_ (
    .A(lane1[26]),
    .B(_005_),
    .Y(_057_)
  );
  NAND _217_ (
    .A(_056_),
    .B(_057_),
    .Y(_001_[26])
  );
  NAND _218_ (
    .A(data_in[27]),
    .B(_004_),
    .Y(_058_)
  );
  NAND _219_ (
    .A(lane1[27]),
    .B(_005_),
    .Y(_059_)
  );
  NAND _220_ (
    .A(_058_),
    .B(_059_),
    .Y(_001_[27])
  );
  NAND _221_ (
    .A(data_in[28]),
    .B(_004_),
    .Y(_060_)
  );
  NAND _222_ (
    .A(lane1[28]),
    .B(_005_),
    .Y(_061_)
  );
  NAND _223_ (
    .A(_060_),
    .B(_061_),
    .Y(_001_[28])
  );
  NAND _224_ (
    .A(data_in[29]),
    .B(_004_),
    .Y(_062_)
  );
  NAND _225_ (
    .A(lane1[29]),
    .B(_005_),
    .Y(_063_)
  );
  NAND _226_ (
    .A(_062_),
    .B(_063_),
    .Y(_001_[29])
  );
  NAND _227_ (
    .A(data_in[30]),
    .B(_004_),
    .Y(_064_)
  );
  NAND _228_ (
    .A(lane1[30]),
    .B(_005_),
    .Y(_065_)
  );
  NAND _229_ (
    .A(_064_),
    .B(_065_),
    .Y(_001_[30])
  );
  NAND _230_ (
    .A(data_in[31]),
    .B(_004_),
    .Y(_066_)
  );
  NAND _231_ (
    .A(lane1[31]),
    .B(_005_),
    .Y(_067_)
  );
  NAND _232_ (
    .A(_066_),
    .B(_067_),
    .Y(_001_[31])
  );
  NOR _233_ (
    .A(selector),
    .B(_003_),
    .Y(_068_)
  );
  NAND _234_ (
    .A(_002_),
    .B(valid_in),
    .Y(_069_)
  );
  NAND _235_ (
    .A(data_in[0]),
    .B(_068_),
    .Y(_070_)
  );
  NAND _236_ (
    .A(lane0[0]),
    .B(_069_),
    .Y(_071_)
  );
  NAND _237_ (
    .A(_070_),
    .B(_071_),
    .Y(_000_[0])
  );
  NAND _238_ (
    .A(data_in[1]),
    .B(_068_),
    .Y(_072_)
  );
  NAND _239_ (
    .A(lane0[1]),
    .B(_069_),
    .Y(_073_)
  );
  NAND _240_ (
    .A(_072_),
    .B(_073_),
    .Y(_000_[1])
  );
  NAND _241_ (
    .A(data_in[2]),
    .B(_068_),
    .Y(_074_)
  );
  NAND _242_ (
    .A(lane0[2]),
    .B(_069_),
    .Y(_075_)
  );
  NAND _243_ (
    .A(_074_),
    .B(_075_),
    .Y(_000_[2])
  );
  NAND _244_ (
    .A(data_in[3]),
    .B(_068_),
    .Y(_076_)
  );
  NAND _245_ (
    .A(lane0[3]),
    .B(_069_),
    .Y(_077_)
  );
  NAND _246_ (
    .A(_076_),
    .B(_077_),
    .Y(_000_[3])
  );
  NAND _247_ (
    .A(data_in[4]),
    .B(_068_),
    .Y(_078_)
  );
  NAND _248_ (
    .A(lane0[4]),
    .B(_069_),
    .Y(_079_)
  );
  NAND _249_ (
    .A(_078_),
    .B(_079_),
    .Y(_000_[4])
  );
  NAND _250_ (
    .A(data_in[5]),
    .B(_068_),
    .Y(_080_)
  );
  NAND _251_ (
    .A(lane0[5]),
    .B(_069_),
    .Y(_081_)
  );
  NAND _252_ (
    .A(_080_),
    .B(_081_),
    .Y(_000_[5])
  );
  NAND _253_ (
    .A(data_in[6]),
    .B(_068_),
    .Y(_082_)
  );
  NAND _254_ (
    .A(lane0[6]),
    .B(_069_),
    .Y(_083_)
  );
  NAND _255_ (
    .A(_082_),
    .B(_083_),
    .Y(_000_[6])
  );
  NAND _256_ (
    .A(data_in[7]),
    .B(_068_),
    .Y(_084_)
  );
  NAND _257_ (
    .A(lane0[7]),
    .B(_069_),
    .Y(_085_)
  );
  NAND _258_ (
    .A(_084_),
    .B(_085_),
    .Y(_000_[7])
  );
  NAND _259_ (
    .A(data_in[8]),
    .B(_068_),
    .Y(_086_)
  );
  NAND _260_ (
    .A(lane0[8]),
    .B(_069_),
    .Y(_087_)
  );
  NAND _261_ (
    .A(_086_),
    .B(_087_),
    .Y(_000_[8])
  );
  NAND _262_ (
    .A(data_in[9]),
    .B(_068_),
    .Y(_088_)
  );
  NAND _263_ (
    .A(lane0[9]),
    .B(_069_),
    .Y(_089_)
  );
  NAND _264_ (
    .A(_088_),
    .B(_089_),
    .Y(_000_[9])
  );
  NAND _265_ (
    .A(data_in[10]),
    .B(_068_),
    .Y(_090_)
  );
  NAND _266_ (
    .A(lane0[10]),
    .B(_069_),
    .Y(_091_)
  );
  NAND _267_ (
    .A(_090_),
    .B(_091_),
    .Y(_000_[10])
  );
  NAND _268_ (
    .A(data_in[11]),
    .B(_068_),
    .Y(_092_)
  );
  NAND _269_ (
    .A(lane0[11]),
    .B(_069_),
    .Y(_093_)
  );
  NAND _270_ (
    .A(_092_),
    .B(_093_),
    .Y(_000_[11])
  );
  NAND _271_ (
    .A(data_in[12]),
    .B(_068_),
    .Y(_094_)
  );
  NAND _272_ (
    .A(lane0[12]),
    .B(_069_),
    .Y(_095_)
  );
  NAND _273_ (
    .A(_094_),
    .B(_095_),
    .Y(_000_[12])
  );
  NAND _274_ (
    .A(data_in[13]),
    .B(_068_),
    .Y(_096_)
  );
  NAND _275_ (
    .A(lane0[13]),
    .B(_069_),
    .Y(_097_)
  );
  NAND _276_ (
    .A(_096_),
    .B(_097_),
    .Y(_000_[13])
  );
  NAND _277_ (
    .A(data_in[14]),
    .B(_068_),
    .Y(_098_)
  );
  NAND _278_ (
    .A(lane0[14]),
    .B(_069_),
    .Y(_099_)
  );
  NAND _279_ (
    .A(_098_),
    .B(_099_),
    .Y(_000_[14])
  );
  NAND _280_ (
    .A(data_in[15]),
    .B(_068_),
    .Y(_100_)
  );
  NAND _281_ (
    .A(lane0[15]),
    .B(_069_),
    .Y(_101_)
  );
  NAND _282_ (
    .A(_100_),
    .B(_101_),
    .Y(_000_[15])
  );
  NAND _283_ (
    .A(data_in[16]),
    .B(_068_),
    .Y(_102_)
  );
  NAND _284_ (
    .A(lane0[16]),
    .B(_069_),
    .Y(_103_)
  );
  NAND _285_ (
    .A(_102_),
    .B(_103_),
    .Y(_000_[16])
  );
  NAND _286_ (
    .A(data_in[17]),
    .B(_068_),
    .Y(_104_)
  );
  NAND _287_ (
    .A(lane0[17]),
    .B(_069_),
    .Y(_105_)
  );
  NAND _288_ (
    .A(_104_),
    .B(_105_),
    .Y(_000_[17])
  );
  NAND _289_ (
    .A(data_in[18]),
    .B(_068_),
    .Y(_106_)
  );
  NAND _290_ (
    .A(lane0[18]),
    .B(_069_),
    .Y(_107_)
  );
  NAND _291_ (
    .A(_106_),
    .B(_107_),
    .Y(_000_[18])
  );
  NAND _292_ (
    .A(data_in[19]),
    .B(_068_),
    .Y(_108_)
  );
  NAND _293_ (
    .A(lane0[19]),
    .B(_069_),
    .Y(_109_)
  );
  NAND _294_ (
    .A(_108_),
    .B(_109_),
    .Y(_000_[19])
  );
  NAND _295_ (
    .A(data_in[20]),
    .B(_068_),
    .Y(_110_)
  );
  NAND _296_ (
    .A(lane0[20]),
    .B(_069_),
    .Y(_111_)
  );
  NAND _297_ (
    .A(_110_),
    .B(_111_),
    .Y(_000_[20])
  );
  NAND _298_ (
    .A(data_in[21]),
    .B(_068_),
    .Y(_112_)
  );
  NAND _299_ (
    .A(lane0[21]),
    .B(_069_),
    .Y(_113_)
  );
  NAND _300_ (
    .A(_112_),
    .B(_113_),
    .Y(_000_[21])
  );
  NAND _301_ (
    .A(data_in[22]),
    .B(_068_),
    .Y(_114_)
  );
  NAND _302_ (
    .A(lane0[22]),
    .B(_069_),
    .Y(_115_)
  );
  NAND _303_ (
    .A(_114_),
    .B(_115_),
    .Y(_000_[22])
  );
  NAND _304_ (
    .A(data_in[23]),
    .B(_068_),
    .Y(_116_)
  );
  NAND _305_ (
    .A(lane0[23]),
    .B(_069_),
    .Y(_117_)
  );
  NAND _306_ (
    .A(_116_),
    .B(_117_),
    .Y(_000_[23])
  );
  NAND _307_ (
    .A(data_in[24]),
    .B(_068_),
    .Y(_118_)
  );
  NAND _308_ (
    .A(lane0[24]),
    .B(_069_),
    .Y(_119_)
  );
  NAND _309_ (
    .A(_118_),
    .B(_119_),
    .Y(_000_[24])
  );
  NAND _310_ (
    .A(data_in[25]),
    .B(_068_),
    .Y(_120_)
  );
  NAND _311_ (
    .A(lane0[25]),
    .B(_069_),
    .Y(_121_)
  );
  NAND _312_ (
    .A(_120_),
    .B(_121_),
    .Y(_000_[25])
  );
  NAND _313_ (
    .A(data_in[26]),
    .B(_068_),
    .Y(_122_)
  );
  NAND _314_ (
    .A(lane0[26]),
    .B(_069_),
    .Y(_123_)
  );
  NAND _315_ (
    .A(_122_),
    .B(_123_),
    .Y(_000_[26])
  );
  NAND _316_ (
    .A(data_in[27]),
    .B(_068_),
    .Y(_124_)
  );
  NAND _317_ (
    .A(lane0[27]),
    .B(_069_),
    .Y(_125_)
  );
  NAND _318_ (
    .A(_124_),
    .B(_125_),
    .Y(_000_[27])
  );
  NAND _319_ (
    .A(data_in[28]),
    .B(_068_),
    .Y(_126_)
  );
  NAND _320_ (
    .A(lane0[28]),
    .B(_069_),
    .Y(_127_)
  );
  NAND _321_ (
    .A(_126_),
    .B(_127_),
    .Y(_000_[28])
  );
  NAND _322_ (
    .A(data_in[29]),
    .B(_068_),
    .Y(_128_)
  );
  NAND _323_ (
    .A(lane0[29]),
    .B(_069_),
    .Y(_129_)
  );
  NAND _324_ (
    .A(_128_),
    .B(_129_),
    .Y(_000_[29])
  );
  NAND _325_ (
    .A(data_in[30]),
    .B(_068_),
    .Y(_130_)
  );
  NAND _326_ (
    .A(lane0[30]),
    .B(_069_),
    .Y(_131_)
  );
  NAND _327_ (
    .A(_130_),
    .B(_131_),
    .Y(_000_[30])
  );
  NAND _328_ (
    .A(data_in[31]),
    .B(_068_),
    .Y(_132_)
  );
  NAND _329_ (
    .A(lane0[31]),
    .B(_069_),
    .Y(_133_)
  );
  NAND _330_ (
    .A(_132_),
    .B(_133_),
    .Y(_000_[31])
  );
  NAND _331_ (
    .A(data_in[0]),
    .B(_004_),
    .Y(_134_)
  );
  NAND _332_ (
    .A(lane1[0]),
    .B(_005_),
    .Y(_135_)
  );
  NAND _333_ (
    .A(_134_),
    .B(_135_),
    .Y(_001_[0])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _334_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(lane0[0])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _335_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(lane0[1])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _336_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(lane0[2])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _337_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(lane0[3])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _338_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(lane0[4])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _339_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(lane0[5])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _340_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(lane0[6])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _341_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(lane0[7])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _342_ (
    .C(clk_2f),
    .D(_000_[8]),
    .Q(lane0[8])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _343_ (
    .C(clk_2f),
    .D(_000_[9]),
    .Q(lane0[9])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _344_ (
    .C(clk_2f),
    .D(_000_[10]),
    .Q(lane0[10])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _345_ (
    .C(clk_2f),
    .D(_000_[11]),
    .Q(lane0[11])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _346_ (
    .C(clk_2f),
    .D(_000_[12]),
    .Q(lane0[12])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _347_ (
    .C(clk_2f),
    .D(_000_[13]),
    .Q(lane0[13])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _348_ (
    .C(clk_2f),
    .D(_000_[14]),
    .Q(lane0[14])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _349_ (
    .C(clk_2f),
    .D(_000_[15]),
    .Q(lane0[15])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _350_ (
    .C(clk_2f),
    .D(_000_[16]),
    .Q(lane0[16])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _351_ (
    .C(clk_2f),
    .D(_000_[17]),
    .Q(lane0[17])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _352_ (
    .C(clk_2f),
    .D(_000_[18]),
    .Q(lane0[18])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _353_ (
    .C(clk_2f),
    .D(_000_[19]),
    .Q(lane0[19])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _354_ (
    .C(clk_2f),
    .D(_000_[20]),
    .Q(lane0[20])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _355_ (
    .C(clk_2f),
    .D(_000_[21]),
    .Q(lane0[21])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _356_ (
    .C(clk_2f),
    .D(_000_[22]),
    .Q(lane0[22])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _357_ (
    .C(clk_2f),
    .D(_000_[23]),
    .Q(lane0[23])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _358_ (
    .C(clk_2f),
    .D(_000_[24]),
    .Q(lane0[24])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _359_ (
    .C(clk_2f),
    .D(_000_[25]),
    .Q(lane0[25])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _360_ (
    .C(clk_2f),
    .D(_000_[26]),
    .Q(lane0[26])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _361_ (
    .C(clk_2f),
    .D(_000_[27]),
    .Q(lane0[27])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _362_ (
    .C(clk_2f),
    .D(_000_[28]),
    .Q(lane0[28])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _363_ (
    .C(clk_2f),
    .D(_000_[29]),
    .Q(lane0[29])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _364_ (
    .C(clk_2f),
    .D(_000_[30]),
    .Q(lane0[30])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _365_ (
    .C(clk_2f),
    .D(_000_[31]),
    .Q(lane0[31])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _366_ (
    .C(clk_2f),
    .D(_001_[0]),
    .Q(lane1[0])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _367_ (
    .C(clk_2f),
    .D(_001_[1]),
    .Q(lane1[1])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _368_ (
    .C(clk_2f),
    .D(_001_[2]),
    .Q(lane1[2])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _369_ (
    .C(clk_2f),
    .D(_001_[3]),
    .Q(lane1[3])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _370_ (
    .C(clk_2f),
    .D(_001_[4]),
    .Q(lane1[4])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _371_ (
    .C(clk_2f),
    .D(_001_[5]),
    .Q(lane1[5])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _372_ (
    .C(clk_2f),
    .D(_001_[6]),
    .Q(lane1[6])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _373_ (
    .C(clk_2f),
    .D(_001_[7]),
    .Q(lane1[7])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _374_ (
    .C(clk_2f),
    .D(_001_[8]),
    .Q(lane1[8])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _375_ (
    .C(clk_2f),
    .D(_001_[9]),
    .Q(lane1[9])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _376_ (
    .C(clk_2f),
    .D(_001_[10]),
    .Q(lane1[10])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _377_ (
    .C(clk_2f),
    .D(_001_[11]),
    .Q(lane1[11])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _378_ (
    .C(clk_2f),
    .D(_001_[12]),
    .Q(lane1[12])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _379_ (
    .C(clk_2f),
    .D(_001_[13]),
    .Q(lane1[13])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _380_ (
    .C(clk_2f),
    .D(_001_[14]),
    .Q(lane1[14])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _381_ (
    .C(clk_2f),
    .D(_001_[15]),
    .Q(lane1[15])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _382_ (
    .C(clk_2f),
    .D(_001_[16]),
    .Q(lane1[16])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _383_ (
    .C(clk_2f),
    .D(_001_[17]),
    .Q(lane1[17])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _384_ (
    .C(clk_2f),
    .D(_001_[18]),
    .Q(lane1[18])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _385_ (
    .C(clk_2f),
    .D(_001_[19]),
    .Q(lane1[19])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _386_ (
    .C(clk_2f),
    .D(_001_[20]),
    .Q(lane1[20])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _387_ (
    .C(clk_2f),
    .D(_001_[21]),
    .Q(lane1[21])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _388_ (
    .C(clk_2f),
    .D(_001_[22]),
    .Q(lane1[22])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _389_ (
    .C(clk_2f),
    .D(_001_[23]),
    .Q(lane1[23])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _390_ (
    .C(clk_2f),
    .D(_001_[24]),
    .Q(lane1[24])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _391_ (
    .C(clk_2f),
    .D(_001_[25]),
    .Q(lane1[25])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _392_ (
    .C(clk_2f),
    .D(_001_[26]),
    .Q(lane1[26])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _393_ (
    .C(clk_2f),
    .D(_001_[27]),
    .Q(lane1[27])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _394_ (
    .C(clk_2f),
    .D(_001_[28]),
    .Q(lane1[28])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _395_ (
    .C(clk_2f),
    .D(_001_[29]),
    .Q(lane1[29])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _396_ (
    .C(clk_2f),
    .D(_001_[30]),
    .Q(lane1[30])
  );
  (* src = "Byte_Striping_synth.v:13" *)
  DFF _397_ (
    .C(clk_2f),
    .D(_001_[31]),
    .Q(lane1[31])
  );
  assign valid_0 = 1'h1;
  assign valid_1 = 1'h1;
endmodule

(* src = "conv_32b_to_8b_synth.v:1" *)
module conv_32b_to_8b_synth(data_in, clk, clk_4f, valid_in, data_out, valid_out);
  (* src = "conv_32b_to_8b_synth.v:7" *)
  wire [7:0] _000_;
  (* src = "conv_32b_to_8b_synth.v:7" *)
  wire [1:0] _001_;
  (* src = "conv_32b_to_8b_synth.v:7" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  (* src = "conv_32b_to_8b_synth.v:2" *)
  input clk;
  (* src = "conv_32b_to_8b_synth.v:2" *)
  input clk_4f;
  (* src = "conv_32b_to_8b_synth.v:1" *)
  input [31:0] data_in;
  (* src = "conv_32b_to_8b_synth.v:3" *)
  output [7:0] data_out;
  (* src = "conv_32b_to_8b_synth.v:6" *)
  wire [1:0] sel;
  (* src = "conv_32b_to_8b_synth.v:2" *)
  input valid_in;
  (* src = "conv_32b_to_8b_synth.v:4" *)
  output valid_out;
  NOT _068_ (
    .A(sel[1]),
    .Y(_030_)
  );
  NOT _069_ (
    .A(sel[0]),
    .Y(_031_)
  );
  NOT _070_ (
    .A(valid_in),
    .Y(_032_)
  );
  NOR _071_ (
    .A(sel[0]),
    .B(_032_),
    .Y(_001_[0])
  );
  NOR _072_ (
    .A(_030_),
    .B(_031_),
    .Y(_033_)
  );
  NOR _073_ (
    .A(sel[1]),
    .B(sel[0]),
    .Y(_034_)
  );
  NOT _074_ (
    .A(_034_),
    .Y(_035_)
  );
  NAND _075_ (
    .A(valid_in),
    .B(_035_),
    .Y(_036_)
  );
  NOR _076_ (
    .A(_033_),
    .B(_036_),
    .Y(_001_[1])
  );
  NAND _077_ (
    .A(data_in[0]),
    .B(_033_),
    .Y(_037_)
  );
  NAND _078_ (
    .A(data_in[24]),
    .B(_034_),
    .Y(_038_)
  );
  NAND _079_ (
    .A(_037_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _080_ (
    .A(_030_),
    .B(sel[0]),
    .Y(_040_)
  );
  NAND _081_ (
    .A(data_in[8]),
    .B(_040_),
    .Y(_041_)
  );
  NOR _082_ (
    .A(sel[1]),
    .B(_031_),
    .Y(_042_)
  );
  NAND _083_ (
    .A(data_in[16]),
    .B(_042_),
    .Y(_043_)
  );
  NAND _084_ (
    .A(_041_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _085_ (
    .A(_039_),
    .B(_044_),
    .Y(_045_)
  );
  NOR _086_ (
    .A(_032_),
    .B(_045_),
    .Y(_000_[0])
  );
  NAND _087_ (
    .A(data_in[1]),
    .B(_033_),
    .Y(_046_)
  );
  NAND _088_ (
    .A(data_in[25]),
    .B(_034_),
    .Y(_047_)
  );
  NAND _089_ (
    .A(_046_),
    .B(_047_),
    .Y(_048_)
  );
  NAND _090_ (
    .A(data_in[9]),
    .B(_040_),
    .Y(_049_)
  );
  NAND _091_ (
    .A(data_in[17]),
    .B(_042_),
    .Y(_050_)
  );
  NAND _092_ (
    .A(_049_),
    .B(_050_),
    .Y(_051_)
  );
  NOR _093_ (
    .A(_048_),
    .B(_051_),
    .Y(_052_)
  );
  NOR _094_ (
    .A(_032_),
    .B(_052_),
    .Y(_000_[1])
  );
  NAND _095_ (
    .A(data_in[2]),
    .B(_033_),
    .Y(_053_)
  );
  NAND _096_ (
    .A(data_in[26]),
    .B(_034_),
    .Y(_054_)
  );
  NAND _097_ (
    .A(_053_),
    .B(_054_),
    .Y(_055_)
  );
  NAND _098_ (
    .A(data_in[10]),
    .B(_040_),
    .Y(_056_)
  );
  NAND _099_ (
    .A(data_in[18]),
    .B(_042_),
    .Y(_057_)
  );
  NAND _100_ (
    .A(_056_),
    .B(_057_),
    .Y(_058_)
  );
  NOR _101_ (
    .A(_055_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _102_ (
    .A(_032_),
    .B(_059_),
    .Y(_000_[2])
  );
  NAND _103_ (
    .A(data_in[3]),
    .B(_033_),
    .Y(_060_)
  );
  NAND _104_ (
    .A(data_in[27]),
    .B(_034_),
    .Y(_061_)
  );
  NAND _105_ (
    .A(_060_),
    .B(_061_),
    .Y(_062_)
  );
  NAND _106_ (
    .A(data_in[11]),
    .B(_040_),
    .Y(_063_)
  );
  NAND _107_ (
    .A(data_in[19]),
    .B(_042_),
    .Y(_064_)
  );
  NAND _108_ (
    .A(_063_),
    .B(_064_),
    .Y(_065_)
  );
  NOR _109_ (
    .A(_062_),
    .B(_065_),
    .Y(_066_)
  );
  NOR _110_ (
    .A(_032_),
    .B(_066_),
    .Y(_000_[3])
  );
  NAND _111_ (
    .A(data_in[4]),
    .B(_033_),
    .Y(_067_)
  );
  NAND _112_ (
    .A(data_in[28]),
    .B(_034_),
    .Y(_003_)
  );
  NAND _113_ (
    .A(_067_),
    .B(_003_),
    .Y(_004_)
  );
  NAND _114_ (
    .A(data_in[12]),
    .B(_040_),
    .Y(_005_)
  );
  NAND _115_ (
    .A(data_in[20]),
    .B(_042_),
    .Y(_006_)
  );
  NAND _116_ (
    .A(_005_),
    .B(_006_),
    .Y(_007_)
  );
  NOR _117_ (
    .A(_004_),
    .B(_007_),
    .Y(_008_)
  );
  NOR _118_ (
    .A(_032_),
    .B(_008_),
    .Y(_000_[4])
  );
  NAND _119_ (
    .A(data_in[5]),
    .B(_033_),
    .Y(_009_)
  );
  NAND _120_ (
    .A(data_in[29]),
    .B(_034_),
    .Y(_010_)
  );
  NAND _121_ (
    .A(_009_),
    .B(_010_),
    .Y(_011_)
  );
  NAND _122_ (
    .A(data_in[13]),
    .B(_040_),
    .Y(_012_)
  );
  NAND _123_ (
    .A(data_in[21]),
    .B(_042_),
    .Y(_013_)
  );
  NAND _124_ (
    .A(_012_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _125_ (
    .A(_011_),
    .B(_014_),
    .Y(_015_)
  );
  NOR _126_ (
    .A(_032_),
    .B(_015_),
    .Y(_000_[5])
  );
  NAND _127_ (
    .A(data_in[6]),
    .B(_033_),
    .Y(_016_)
  );
  NAND _128_ (
    .A(data_in[30]),
    .B(_034_),
    .Y(_017_)
  );
  NAND _129_ (
    .A(_016_),
    .B(_017_),
    .Y(_018_)
  );
  NAND _130_ (
    .A(data_in[14]),
    .B(_040_),
    .Y(_019_)
  );
  NAND _131_ (
    .A(data_in[22]),
    .B(_042_),
    .Y(_020_)
  );
  NAND _132_ (
    .A(_019_),
    .B(_020_),
    .Y(_021_)
  );
  NOR _133_ (
    .A(_018_),
    .B(_021_),
    .Y(_022_)
  );
  NOR _134_ (
    .A(_032_),
    .B(_022_),
    .Y(_000_[6])
  );
  NAND _135_ (
    .A(data_in[7]),
    .B(_033_),
    .Y(_023_)
  );
  NAND _136_ (
    .A(data_in[31]),
    .B(_034_),
    .Y(_024_)
  );
  NAND _137_ (
    .A(_023_),
    .B(_024_),
    .Y(_025_)
  );
  NAND _138_ (
    .A(data_in[15]),
    .B(_040_),
    .Y(_026_)
  );
  NAND _139_ (
    .A(data_in[23]),
    .B(_042_),
    .Y(_027_)
  );
  NAND _140_ (
    .A(_026_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _141_ (
    .A(_025_),
    .B(_028_),
    .Y(_029_)
  );
  NOR _142_ (
    .A(_032_),
    .B(_029_),
    .Y(_000_[7])
  );
  BUF _143_ (
    .A(valid_in),
    .Y(_002_)
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _144_ (
    .C(clk_4f),
    .D(_001_[0]),
    .Q(sel[0])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _145_ (
    .C(clk_4f),
    .D(_001_[1]),
    .Q(sel[1])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _146_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _147_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _148_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _149_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _150_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _151_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _152_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _153_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  (* src = "conv_32b_to_8b_synth.v:7" *)
  DFF _154_ (
    .C(clk_4f),
    .D(_002_),
    .Q(valid_out)
  );
endmodule

(* src = "paralelo_serial_synth.v:1" *)
module paralelo_serial_synth(clk_4f, clk_32f, reset_L, data_in, valid_in, data_out);
  (* src = "paralelo_serial_synth.v:12" *)
  wire _000_;
  (* src = "paralelo_serial_synth.v:12" *)
  wire [2:0] _001_;
  (* src = "paralelo_serial_synth.v:12" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  (* src = "paralelo_serial_synth.v:3" *)
  input clk_32f;
  (* src = "paralelo_serial_synth.v:2" *)
  input clk_4f;
  (* src = "paralelo_serial_synth.v:5" *)
  input [7:0] data_in;
  (* src = "paralelo_serial_synth.v:7" *)
  output data_out;
  (* src = "paralelo_serial_synth.v:4" *)
  input reset_L;
  (* init = 3'h0 *)
  (* src = "paralelo_serial_synth.v:9" *)
  wire [2:0] selector;
  (* src = "paralelo_serial_synth.v:10" *)
  wire [7:0] tmp_out;
  (* src = "paralelo_serial_synth.v:6" *)
  input valid_in;
  NOT _091_ (
    .A(reset_L),
    .Y(_022_)
  );
  NOT _092_ (
    .A(selector[2]),
    .Y(_056_)
  );
  NOT _093_ (
    .A(selector[0]),
    .Y(_001_[0])
  );
  NOT _094_ (
    .A(selector[1]),
    .Y(_057_)
  );
  NOT _095_ (
    .A(data_in[0]),
    .Y(_058_)
  );
  NOT _096_ (
    .A(valid_in),
    .Y(_059_)
  );
  NOT _097_ (
    .A(data_in[1]),
    .Y(_060_)
  );
  NOT _098_ (
    .A(data_in[2]),
    .Y(_061_)
  );
  NOT _099_ (
    .A(data_in[3]),
    .Y(_062_)
  );
  NOT _100_ (
    .A(data_in[4]),
    .Y(_063_)
  );
  NOT _101_ (
    .A(data_in[5]),
    .Y(_064_)
  );
  NOT _102_ (
    .A(data_in[6]),
    .Y(_065_)
  );
  NOT _103_ (
    .A(data_in[7]),
    .Y(_066_)
  );
  NOT _104_ (
    .A(tmp_out[7]),
    .Y(_067_)
  );
  NOT _105_ (
    .A(data_out),
    .Y(_068_)
  );
  NOT _106_ (
    .A(tmp_out[3]),
    .Y(_069_)
  );
  NOT _107_ (
    .A(tmp_out[1]),
    .Y(_070_)
  );
  NAND _108_ (
    .A(data_in[0]),
    .B(valid_in),
    .Y(_071_)
  );
  NOT _109_ (
    .A(_071_),
    .Y(_002_[0])
  );
  NAND _110_ (
    .A(valid_in),
    .B(data_in[1]),
    .Y(_072_)
  );
  NOT _111_ (
    .A(_072_),
    .Y(_002_[1])
  );
  NAND _112_ (
    .A(valid_in),
    .B(_061_),
    .Y(_002_[2])
  );
  NAND _113_ (
    .A(valid_in),
    .B(_062_),
    .Y(_002_[3])
  );
  NAND _114_ (
    .A(valid_in),
    .B(_063_),
    .Y(_002_[4])
  );
  NAND _115_ (
    .A(valid_in),
    .B(_064_),
    .Y(_002_[5])
  );
  NAND _116_ (
    .A(valid_in),
    .B(data_in[6]),
    .Y(_073_)
  );
  NOT _117_ (
    .A(_073_),
    .Y(_002_[6])
  );
  NAND _118_ (
    .A(valid_in),
    .B(_066_),
    .Y(_002_[7])
  );
  NAND _119_ (
    .A(_059_),
    .B(data_out),
    .Y(_074_)
  );
  NOR _120_ (
    .A(_001_[0]),
    .B(selector[1]),
    .Y(_075_)
  );
  NAND _121_ (
    .A(selector[0]),
    .B(_057_),
    .Y(_076_)
  );
  NAND _122_ (
    .A(_056_),
    .B(_075_),
    .Y(_077_)
  );
  NOR _123_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_078_)
  );
  NOT _124_ (
    .A(_078_),
    .Y(_079_)
  );
  NOR _125_ (
    .A(selector[2]),
    .B(_079_),
    .Y(_080_)
  );
  NAND _126_ (
    .A(_056_),
    .B(_078_),
    .Y(_081_)
  );
  NAND _127_ (
    .A(_068_),
    .B(_081_),
    .Y(_082_)
  );
  NAND _128_ (
    .A(_067_),
    .B(_080_),
    .Y(_083_)
  );
  NAND _129_ (
    .A(_082_),
    .B(_083_),
    .Y(_084_)
  );
  NAND _130_ (
    .A(_077_),
    .B(_084_),
    .Y(_085_)
  );
  NAND _131_ (
    .A(_001_[0]),
    .B(selector[1]),
    .Y(_086_)
  );
  NOT _132_ (
    .A(_086_),
    .Y(_087_)
  );
  NOR _133_ (
    .A(selector[2]),
    .B(_086_),
    .Y(_088_)
  );
  NOR _134_ (
    .A(tmp_out[6]),
    .B(_077_),
    .Y(_089_)
  );
  NOR _135_ (
    .A(_088_),
    .B(_089_),
    .Y(_090_)
  );
  NAND _136_ (
    .A(_085_),
    .B(_090_),
    .Y(_023_)
  );
  NAND _137_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_024_)
  );
  NOT _138_ (
    .A(_024_),
    .Y(_025_)
  );
  NOR _139_ (
    .A(selector[2]),
    .B(_024_),
    .Y(_026_)
  );
  NAND _140_ (
    .A(_056_),
    .B(_025_),
    .Y(_027_)
  );
  NAND _141_ (
    .A(tmp_out[5]),
    .B(_088_),
    .Y(_028_)
  );
  NOT _142_ (
    .A(_028_),
    .Y(_029_)
  );
  NOR _143_ (
    .A(_026_),
    .B(_029_),
    .Y(_030_)
  );
  NAND _144_ (
    .A(_023_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _145_ (
    .A(selector[2]),
    .B(_078_),
    .Y(_032_)
  );
  NOT _146_ (
    .A(_032_),
    .Y(_033_)
  );
  NOR _147_ (
    .A(tmp_out[4]),
    .B(_027_),
    .Y(_034_)
  );
  NOR _148_ (
    .A(_033_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _149_ (
    .A(_031_),
    .B(_035_),
    .Y(_036_)
  );
  NOR _150_ (
    .A(_069_),
    .B(_032_),
    .Y(_037_)
  );
  NOR _151_ (
    .A(_056_),
    .B(_076_),
    .Y(_038_)
  );
  NAND _152_ (
    .A(selector[2]),
    .B(_075_),
    .Y(_039_)
  );
  NOR _153_ (
    .A(_037_),
    .B(_038_),
    .Y(_040_)
  );
  NAND _154_ (
    .A(_036_),
    .B(_040_),
    .Y(_041_)
  );
  NOR _155_ (
    .A(_056_),
    .B(_086_),
    .Y(_042_)
  );
  NAND _156_ (
    .A(selector[2]),
    .B(_087_),
    .Y(_043_)
  );
  NOR _157_ (
    .A(tmp_out[2]),
    .B(_039_),
    .Y(_044_)
  );
  NOR _158_ (
    .A(_042_),
    .B(_044_),
    .Y(_045_)
  );
  NAND _159_ (
    .A(_041_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _160_ (
    .A(_056_),
    .B(_024_),
    .Y(_047_)
  );
  NAND _161_ (
    .A(selector[2]),
    .B(_025_),
    .Y(_048_)
  );
  NOR _162_ (
    .A(_070_),
    .B(_043_),
    .Y(_049_)
  );
  NOR _163_ (
    .A(_047_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _164_ (
    .A(_046_),
    .B(_050_),
    .Y(_051_)
  );
  NOR _165_ (
    .A(tmp_out[0]),
    .B(_048_),
    .Y(_052_)
  );
  NOR _166_ (
    .A(_059_),
    .B(_052_),
    .Y(_053_)
  );
  NAND _167_ (
    .A(_051_),
    .B(_053_),
    .Y(_054_)
  );
  NAND _168_ (
    .A(_074_),
    .B(_054_),
    .Y(_000_)
  );
  NAND _169_ (
    .A(_076_),
    .B(_086_),
    .Y(_001_[1])
  );
  NAND _170_ (
    .A(selector[2]),
    .B(_024_),
    .Y(_055_)
  );
  NAND _171_ (
    .A(_027_),
    .B(_055_),
    .Y(_001_[2])
  );
  NOR _172_ (
    .A(reset_L),
    .B(_058_),
    .Y(_003_)
  );
  NOR _173_ (
    .A(reset_L),
    .B(_060_),
    .Y(_004_)
  );
  NOR _174_ (
    .A(reset_L),
    .B(_061_),
    .Y(_005_)
  );
  NOR _175_ (
    .A(reset_L),
    .B(_062_),
    .Y(_006_)
  );
  NOR _176_ (
    .A(reset_L),
    .B(_063_),
    .Y(_007_)
  );
  NOR _177_ (
    .A(reset_L),
    .B(_064_),
    .Y(_008_)
  );
  NOR _178_ (
    .A(reset_L),
    .B(_065_),
    .Y(_009_)
  );
  NOR _179_ (
    .A(reset_L),
    .B(_066_),
    .Y(_010_)
  );
  NOR _180_ (
    .A(reset_L),
    .B(data_in[0]),
    .Y(_011_)
  );
  NOR _181_ (
    .A(reset_L),
    .B(data_in[1]),
    .Y(_012_)
  );
  NOR _182_ (
    .A(reset_L),
    .B(data_in[2]),
    .Y(_013_)
  );
  NOR _183_ (
    .A(reset_L),
    .B(data_in[3]),
    .Y(_014_)
  );
  NOR _184_ (
    .A(reset_L),
    .B(data_in[4]),
    .Y(_015_)
  );
  NOR _185_ (
    .A(reset_L),
    .B(data_in[5]),
    .Y(_016_)
  );
  NOR _186_ (
    .A(reset_L),
    .B(data_in[6]),
    .Y(_017_)
  );
  NOR _187_ (
    .A(reset_L),
    .B(data_in[7]),
    .Y(_018_)
  );
  NOT _188_ (
    .A(reset_L),
    .Y(_019_)
  );
  NOT _189_ (
    .A(reset_L),
    .Y(_020_)
  );
  NOT _190_ (
    .A(reset_L),
    .Y(_021_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _191_ (
    .C(clk_32f),
    .D(_002_[0]),
    .Q(tmp_out[0]),
    .R(_011_),
    .S(_003_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _192_ (
    .C(clk_32f),
    .D(_002_[1]),
    .Q(tmp_out[1]),
    .R(_012_),
    .S(_004_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _193_ (
    .C(clk_32f),
    .D(_002_[2]),
    .Q(tmp_out[2]),
    .R(_013_),
    .S(_005_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _194_ (
    .C(clk_32f),
    .D(_002_[3]),
    .Q(tmp_out[3]),
    .R(_014_),
    .S(_006_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _195_ (
    .C(clk_32f),
    .D(_002_[4]),
    .Q(tmp_out[4]),
    .R(_015_),
    .S(_007_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _196_ (
    .C(clk_32f),
    .D(_002_[5]),
    .Q(tmp_out[5]),
    .R(_016_),
    .S(_008_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _197_ (
    .C(clk_32f),
    .D(_002_[6]),
    .Q(tmp_out[6]),
    .R(_017_),
    .S(_009_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _198_ (
    .C(clk_32f),
    .D(_002_[7]),
    .Q(tmp_out[7]),
    .R(_018_),
    .S(_010_)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _199_ (
    .C(clk_32f),
    .D(_001_[0]),
    .Q(selector[0]),
    .R(_019_),
    .S(1'h0)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _200_ (
    .C(clk_32f),
    .D(_001_[1]),
    .Q(selector[1]),
    .R(_020_),
    .S(1'h0)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _201_ (
    .C(clk_32f),
    .D(_001_[2]),
    .Q(selector[2]),
    .R(_021_),
    .S(1'h0)
  );
  (* src = "paralelo_serial_synth.v:12" *)
  DFFSR _202_ (
    .C(clk_32f),
    .D(_000_),
    .Q(data_out),
    .R(_022_),
    .S(1'h0)
  );
endmodule

(* top =  1  *)
(* src = "phy_tx_synth.v:5" *)
module phy_tx_synth(entrada, valid, reset_L, selector_tx, clk_f, clk_2f, clk_4f, clk_32f, salida1, salida2);
  (* src = "phy_tx_synth.v:17" *)
  (* unused_bits = "0" *)
  wire cable1;
  (* src = "phy_tx_synth.v:17" *)
  (* unused_bits = "0" *)
  wire cable2;
  (* src = "phy_tx_synth.v:17" *)
  (* unused_bits = "0" *)
  wire cable3;
  (* src = "phy_tx_synth.v:17" *)
  (* unused_bits = "0" *)
  wire cable4;
  (* src = "phy_tx_synth.v:18" *)
  wire [31:0] cable5;
  (* src = "phy_tx_synth.v:18" *)
  wire [31:0] cable6;
  (* src = "phy_tx_synth.v:19" *)
  wire [7:0] cable7;
  (* src = "phy_tx_synth.v:19" *)
  wire [7:0] cable8;
  (* src = "phy_tx_synth.v:11" *)
  input clk_2f;
  (* src = "phy_tx_synth.v:13" *)
  input clk_32f;
  (* src = "phy_tx_synth.v:12" *)
  input clk_4f;
  (* src = "phy_tx_synth.v:10" *)
  input clk_f;
  (* src = "phy_tx_synth.v:6" *)
  input [31:0] entrada;
  (* src = "phy_tx_synth.v:8" *)
  input reset_L;
  (* src = "phy_tx_synth.v:14" *)
  output salida1;
  (* src = "phy_tx_synth.v:15" *)
  output salida2;
  (* src = "phy_tx_synth.v:9" *)
  input selector_tx;
  (* src = "phy_tx_synth.v:7" *)
  input valid;
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:21" *)
  Byte_Striping_synth Byte_Striping_synth (
    .clk_2f(clk_2f),
    .data_in(entrada),
    .lane0(cable5),
    .lane1(cable6),
    .selector(selector_tx),
    .valid_0(cable1),
    .valid_1(cable2),
    .valid_in(valid)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:32" *)
  conv_32b_to_8b_synth conv_32b_to_8b_synth_1 (
    .clk(clk_f),
    .clk_4f(clk_4f),
    .data_in(cable5),
    .data_out(cable7),
    .valid_in(valid),
    .valid_out(cable4)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:41" *)
  conv_32b_to_8b_synth conv_32b_to_8b_synth_2 (
    .clk(clk_f),
    .clk_4f(clk_4f),
    .data_in(cable6),
    .data_out(cable8),
    .valid_in(valid),
    .valid_out(cable3)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:50" *)
  paralelo_serial_synth paralelo_serial_synth_1 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(cable7),
    .data_out(salida1),
    .reset_L(reset_L),
    .valid_in(valid)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:59" *)
  paralelo_serial_synth paralelo_serial_synth_2 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(cable8),
    .data_out(salida2),
    .reset_L(reset_L),
    .valid_in(valid)
  );
endmodule
